/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package examen;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author crixo
 */
public class Formulario_Clientes extends javax.swing.JFrame {
    private DefaultListModel model;
    /**
     * Creates new form Formulario_Clientes
     */
    public Formulario_Clientes() {
        initComponents();
        setLocationRelativeTo(null);
        
        model = leerDatos();
        listado_clientes.setModel(model);
    }
    
    private DefaultListModel leerDatos(){
        DefaultListModel model = new DefaultListModel();
        
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/papeleria", "root", "0719")) {
            String query = "SELECT clt_nom,clt_apell FROM clientes";
            try (Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(query)) {

                
                while (rs.next()) {
                    String nombreCompleto = rs.getString("clt_nom") + " " + rs.getString("clt_apell");
                    model.addElement(nombreCompleto);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
        return model;
    }
    
    private void eliminarCliente(String cliente) {
    String url = "jdbc:mysql://localhost:3306/papelaria"; 
    String user = "root"; 
    String password = "0719"; 

    try (Connection connection = DriverManager.getConnection(url, user, password);
         PreparedStatement statement = connection.prepareStatement(
             "DELETE FROM clientes WHERE clt_nom = ?")) {

        
        statement.setString(1, cliente);
        
        int filasEliminadas = statement.executeUpdate();
        
        if (filasEliminadas > 0) {
            JOptionPane.showMessageDialog(null, "Cliente eliminado exitosamente.");
        } else {
            JOptionPane.showMessageDialog(null, "No se encontr√≥ el cliente seleccionado.");
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al eliminar el cliente: " + ex.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listado_clientes = new javax.swing.JList<>();
        bVolver = new javax.swing.JButton();
        bAlta = new javax.swing.JButton();
        bBaja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        listado_clientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listado_clientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listado_clientesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listado_clientes);

        bVolver.setText("Volver");
        bVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVolverActionPerformed(evt);
            }
        });

        bAlta.setText("Alta");

        bBaja.setText("Baja");
        bBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(bVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(bAlta)
                .addGap(51, 51, 51)
                .addComponent(bBaja)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bVolver)
                    .addComponent(bAlta)
                    .addComponent(bBaja))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVolverActionPerformed
        this.setVisible(false);
        Ventana_principal principal = new Ventana_principal();
        principal.setVisible(true);
        
    }//GEN-LAST:event_bVolverActionPerformed

    private void listado_clientesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listado_clientesValueChanged
        int index = listado_clientes.getSelectedIndex();
       String nombreCompleto = (String) model.getElementAt(index);
       String[] nombreApellido = nombreCompleto.split(" ");
        
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/papelaria", "root", "0719")) {
            String query = "SELECT * FROM clientes WHERE clt_nom = '" + nombreApellido[0] + "' AND clt_apell = '" + nombreApellido[1] + "'";
            try (Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(query)) {

                
                
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_listado_clientesValueChanged

    private void bBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBajaActionPerformed
          String clienteSeleccionado = listado_clientes.getSelectedValue();
       
       if (clienteSeleccionado != null){
           String cliente = clienteSeleccionado.split(" ")[0];
           eliminarCliente(cliente);
       }else{
           JOptionPane.showMessageDialog(null, "No has seleccionado cliente");
       }
    }//GEN-LAST:event_bBajaActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAlta;
    private javax.swing.JButton bBaja;
    private javax.swing.JButton bVolver;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listado_clientes;
    // End of variables declaration//GEN-END:variables
}
